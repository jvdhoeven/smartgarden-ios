{"version":3,"sources":["constants.js","containers/home/components/diagram/index.js","containers/home/components/dashboard/index.js","helpers/utils.js","containers/home/index.js","containers/settings/index.js","containers/start/components/device-item/index.js","containers/start/components/device-connecting/index.js","containers/start/components/device-loading/index.js","containers/start/components/device-not-found/index.js","containers/start/index.js","containers/watering/components/program-form/index.js","containers/watering/components/program-item/index.js","containers/watering/components/program-not-found/index.js","containers/watering/index.js","App.js","reportWebVitals.js","index.js"],"names":["SERVICE_UUID","CHARACTERISTIC_VALVE","CHARACTERISTIC_LOCATION","CHARACTERISTIC_FLOW_RATE","chart","Diagram","props","temperatures","temperaturesGround","moistures","onCancel","chartRef","useRef","modalRef","useEffect","window","smartgarden","changeTitle","Chart","current","getContext","type","data","datasets","label","yAxisID","backgroundColor","borderColor","fill","options","animation","scales","y","display","position","min","max","ticks","callback","value","index","values","y1","grid","drawOnChartArea","UIkit","modal","show","labels","slice","Math","length","map","i","update","className","style","height","ref","onClick","Dashboard","temperature","temperatureGround","moisture","watering","setShowDiagram","handleValveClick","uk-grid","uk-toggle","to","bytesToString","String","fromCharCode","apply","Uint8Array","stringToBytes","array","l","charCodeAt","buffer","HomeContainer","connected","device","useState","showDiagram","setTemperature","setTemperatureGround","setMoisture","setWatering","setTemperatures","setTemperaturesGround","setMoistures","readData","ble","read","id","interval","setInterval","clearInterval","write","SettingsContainer","dateTime","setDateTime","location","setLocation","flowRate","setFlowRate","inputs","setInputs","handleInputChange","event","target","name","error","console","log","onSubmit","preventDefault","disabled","uk-icon","navigator","geolocation","getCurrentPosition","success","coords","latitude","longitude","onChange","DeviceItem","rssi","DeviceConnecting","DeviceLoading","DeviceNotFound","StartContainer","isScanning","scan","devices","selectDevice","connecting","setConnecting","confirm","localStorage","setItem","JSON","stringify","handleDeviceClick","ProgramForm","title","onInputChange","onDelete","durationSelectOptions","push","split","sunrise","Date","getSunrise","sunset","getSunset","checked","mode","getHours","getMinutes","startTime","duration","smart","ProgramItem","program","onSelectProgramm","onSetProgramActive","active","ProgramNotFound","WateringContainer","parse","getItem","programs","setPrograms","getActiveProgram","activeId","forEach","activeProgram","setActiveProgram","activeProgramChanged","setActiveProgramChanged","selectedProgram","setSelectedProgram","addProgram","setAddProgram","inputDefaults","uk-alert","replace","stopPropagation","currentPrograms","splice","App","history","useHistory","useLocation","sessionDevice","setIsScanning","setConnected","selectedDevice","setSelectedDevice","setDevices","setTimeout","SCAN_SECONDS","use","Icons","item","pathname","showBottomBar","setBottomBarItem","connect","blib","alert","hideBottomBar","disconnect","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","document","addEventListener","ReactDOM","render","StrictMode","getElementById","goTo","page","href"],"mappings":"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","file":"static/js/main.d0b0fcae.chunk.js","sourcesContent":["export const SERVICE_UUID = \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\";\nexport const CHARACTERISTIC_TEMP = \"beb5483e-36e1-4688-b7f5-ea07361b26a8\";\nexport const CHARACTERISTIC_TEMP_GROUND =\n  \"a10b02a4-3b1c-45b5-a617-5648120f8e4c\";\nexport const CHARACTERISTIC_MOISTURE = \"9a0c0611-a48f-4dbc-bde2-31582e606ee5\";\nexport const CHARACTERISTIC_VALVE = \"c3134125-b92d-479f-a437-2de8cea412e7\";\nexport const CHARACTERISTIC_PROGRAM = \"20090a72-b78e-4ba9-9df6-705182718eda\";\nexport const CHARACTERISTIC_DATE_TIME = \"4de76262-8d84-4ba6-bb3a-2f2716a6c28f\";\nexport const CHARACTERISTIC_LOCATION = \"6bef33fc-dadc-408e-98e9-d6c8cb35e976\";\nexport const CHARACTERISTIC_FLOW_RATE = \"40a47f70-752b-4598-91ad-748cdbc7958a\";\n","import React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/dist/chart\";\nimport UIkit from \"uikit\";\n\nlet chart = null;\n\nfunction Diagram(props) {\n  const { temperatures, temperaturesGround, moistures, onCancel } = props;\n  const chartRef = useRef(null);\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    window.smartgarden.changeTitle(\"Details\");\n\n    const options = {\n      animation: false,\n      scales: {\n        y: {\n          type: \"linear\",\n          display: true,\n          position: \"left\",\n          min: -20,\n          max: 40,\n          ticks: {\n            callback: function (value, index, values) {\n              return `${value} °C`;\n            },\n          },\n        },\n        y1: {\n          type: \"linear\",\n          display: true,\n          position: \"right\",\n          min: 0,\n          max: 100,\n          ticks: {\n            callback: function (value, index, values) {\n              return `${value} %`;\n            },\n          },\n          // grid line settings\n          grid: {\n            drawOnChartArea: false, // only want the grid lines for one axis to show up\n          },\n        },\n      },\n    };\n\n    chart = new Chart(chartRef.current.getContext(\"2d\"), {\n      type: \"line\",\n      data: {\n        datasets: [\n          {\n            label: \"Luft\",\n            yAxisID: \"y\",\n            backgroundColor: \"rgba(255, 0, 0, 0.3)\",\n            borderColor: \"rgba(255, 0, 0, 0.4)\",\n          },\n          {\n            label: \"Boden\",\n            yAxisID: \"y\",\n            backgroundColor: \"rgba(0, 255, 0, 0.3)\",\n            borderColor: \"rgba(0, 255, 0, 0.4)\",\n          },\n          {\n            label: \"Feuchtigkeit\",\n            yAxisID: \"y1\",\n            backgroundColor: \"rgba(0, 0, 255, 0.3)\",\n            borderColor: \"rgba(0, 0, 255, 0.4)\",\n            fill: true,\n          },\n        ],\n      },\n      options: options,\n    });\n\n    UIkit.modal(modalRef.current).show();\n  }, []);\n\n  useEffect(() => {\n    chart.data.labels = temperatures\n      .slice(Math.max(temperatures.length - 20, 0))\n      .map((label, i) => i);\n    chart.data.datasets[0].data = temperatures.slice(\n      Math.max(temperatures.length - 20, 0)\n    );\n    chart.data.datasets[1].data = temperaturesGround.slice(\n      Math.max(temperaturesGround.length - 20, 0)\n    );\n    chart.data.datasets[2].data = moistures.slice(\n      Math.max(moistures.length - 20, 0)\n    );\n    chart.update();\n  }, [moistures, temperatures, temperaturesGround]);\n\n  return (\n    <div className=\"uk-section uk-section-small\">\n      <div className=\"uk-container\">\n        <canvas style={{ height: \"60vh\" }} ref={chartRef}></canvas>\n        <div className=\"uk-margin\">\n          <button\n            className=\"uk-button uk-button-default uk-width-1-1\"\n            type=\"button\"\n            onClick={onCancel}\n          >\n            Zurück\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Diagram;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard(props) {\n  const {\n    temperature,\n    temperatureGround,\n    moisture,\n    watering,\n    setShowDiagram,\n    handleValveClick,\n  } = props;\n\n  return (\n    <div className=\"uk-section uk-section-small\">\n      <div className=\"uk-container\">\n        <div\n          className=\"uk-child-width-1-2 uk-grid-small uk-grid-match uk-text-center\"\n          uk-grid=\"true\"\n        >\n          <div>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <span className=\"uk-display-block uk-text-large\">\n                <i className=\"fas fa-temperature-high\"></i>\n              </span>\n              <span className=\"uk-h4\">{temperature} °C</span>\n            </div>\n          </div>\n          <div>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <span className=\"uk-display-block uk-text-large\">\n                <i className=\"fas fa-temperature-high\"></i>\n              </span>\n              <span className=\"uk-h4\">{temperatureGround} °C</span>\n            </div>\n          </div>\n          <div>\n            <div className=\"uk-card uk-card-default uk-card-body\">\n              <span className=\"uk-display-block uk-text-large\">\n                <i className=\"fas fa-water\"></i>\n              </span>\n              <span className=\"uk-h4\">{moisture} %</span>\n            </div>\n          </div>\n          <div>\n            <div\n              className=\"uk-card uk-card-default uk-card-body\"\n              onClick={handleValveClick}\n            >\n              <span className=\"uk-display-block uk-text-large\">\n                <i className=\"fas fa-power-off\"></i>\n              </span>\n              <span className=\"uk-h4\">{watering === \"0\" ? \"Aus\" : \"An\"}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"uk-container uk-margin-top\">\n        <button\n          className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\"\n          onClick={() => {\n            setShowDiagram(true);\n          }}\n          uk-toggle=\"true\"\n        >\n          <span>\n            <i className=\"fas fa-chart-area\"></i> Details\n          </span>\n        </button>\n      </div>\n      <div className=\"uk-container\">\n        <Link\n          className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\"\n          to=\"/watering\"\n        >\n          <i className=\"fas fa-hand-holding-water\"></i> Bewässerung\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","export const bytesToString = (data) => {\n  return String.fromCharCode.apply(null, new Uint8Array(data));\n};\n\nexport const stringToBytes = (data) => {\n  var array = new Uint8Array(data.length);\n  for (var i = 0, l = data.length; i < l; i++) {\n    array[i] = data.charCodeAt(i);\n  }\n  return array.buffer;\n};\n","import React, { useEffect, useState } from \"react\";\nimport Diagram from \"./components/diagram\";\nimport Dashboard from \"./components/dashboard\";\nimport { bytesToString, stringToBytes } from \"../../helpers/utils\";\nimport {\n  SERVICE_UUID,\n  CHARACTERISTIC_MOISTURE,\n  CHARACTERISTIC_TEMP,\n  CHARACTERISTIC_TEMP_GROUND,\n  CHARACTERISTIC_VALVE,\n} from \"../../constants\";\n\nfunction HomeContainer(props) {\n  const { connected, device } = props;\n\n  const [showDiagram, setShowDiagram] = useState(false);\n\n  const [temperature, setTemperature] = useState(\"0\");\n  const [temperatureGround, setTemperatureGround] = useState(\"0\");\n  const [moisture, setMoisture] = useState(\"0\");\n  const [watering, setWatering] = useState(\"0\");\n  const [temperatures, setTemperatures] = useState([]);\n  const [temperaturesGround, setTemperaturesGround] = useState([]);\n  const [moistures, setMoistures] = useState([]);\n\n  const handleValveClick = () => {\n    if (watering === \"1\") {\n      window.ble.write(\n        device.id,\n        SERVICE_UUID,\n        CHARACTERISTIC_VALVE,\n        stringToBytes(\"0\"),\n        (data) => {\n          setWatering(\"0\");\n        }\n      );\n    } else {\n      window.ble.write(\n        device.id,\n        SERVICE_UUID,\n        CHARACTERISTIC_VALVE,\n        stringToBytes(\"1\"),\n        (data) => {\n          setWatering(\"1\");\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (connected && device !== null) {\n      // for some reason startNotification and stopNotification does not work when called synchronously, therefor i\n      // switched to polling with read instead, since it works as expected\n      const readData = () => {\n        window.ble.read(\n          device.id,\n          SERVICE_UUID,\n          CHARACTERISTIC_TEMP,\n          (data) => {\n            setTemperature(bytesToString(data));\n            setTemperatures((temperatures) => [\n              ...temperatures,\n              bytesToString(data),\n            ]);\n          },\n          () => {}\n        );\n\n        window.ble.read(\n          device.id,\n          SERVICE_UUID,\n          CHARACTERISTIC_TEMP_GROUND,\n          (data) => {\n            setTemperatureGround(bytesToString(data));\n            setTemperaturesGround((temperaturesGround) => [\n              ...temperaturesGround,\n              bytesToString(data),\n            ]);\n          },\n          () => {}\n        );\n\n        window.ble.read(\n          device.id,\n          SERVICE_UUID,\n          CHARACTERISTIC_MOISTURE,\n          (data) => {\n            setMoisture(bytesToString(data));\n            setMoistures((moistures) => [...moistures, bytesToString(data)]);\n          },\n          () => {}\n        );\n\n        window.ble.read(\n          device.id,\n          SERVICE_UUID,\n          CHARACTERISTIC_VALVE,\n          (data) => {\n            setWatering(bytesToString(data));\n          },\n          () => {}\n        );\n      };\n      readData();\n      const interval = setInterval(readData, 3000);\n\n      // clean up on unmount\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [connected, device]);\n\n  return (\n    <>\n      {connected && !showDiagram && (\n        <Dashboard\n          temperature={temperature}\n          temperatureGround={temperatureGround}\n          moisture={moisture}\n          watering={watering}\n          setShowDiagram={setShowDiagram}\n          handleValveClick={handleValveClick}\n        />\n      )}\n      {connected && showDiagram && (\n        <Diagram\n          temperatures={temperatures}\n          temperaturesGround={temperaturesGround}\n          moistures={moistures}\n          onCancel={() => {\n            setShowDiagram(false);\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default HomeContainer;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CHARACTERISTIC_FLOW_RATE,\n  CHARACTERISTIC_LOCATION,\n  SERVICE_UUID,\n} from \"../../constants\";\nimport { CHARACTERISTIC_DATE_TIME } from \"../../constants.js\";\nimport { bytesToString, stringToBytes } from \"../../helpers/utils\";\n\nfunction SettingsContainer(props) {\n  const { device } = props;\n  const [dateTime, setDateTime] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [flowRate, setFlowRate] = useState(null);\n\n  const [inputs, setInputs] = useState({\n    dateTime: dateTime | \"\",\n    location: location | \"\",\n    flowRate: flowRate | \"\",\n  });\n\n  const handleInputChange = (event) => {\n    setInputs((inputs) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    window.ble.write(\n      device.id,\n      SERVICE_UUID,\n      CHARACTERISTIC_LOCATION,\n      stringToBytes(inputs.location),\n      (data) => {}\n    );\n    window.ble.write(\n      device.id,\n      SERVICE_UUID,\n      CHARACTERISTIC_FLOW_RATE,\n      stringToBytes(inputs.flowRate),\n      (data) => {}\n    );\n  };\n\n  const handleLocation = () => {\n    navigator.geolocation.getCurrentPosition(\n      (success) => {\n        setLocation(`${success.coords.latitude};${success.coords.longitude}`);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (device) {\n      window.ble.read(\n        device.id,\n        SERVICE_UUID,\n        CHARACTERISTIC_DATE_TIME,\n        (data) => {\n          setDateTime(bytesToString(data));\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n      window.ble.read(\n        device.id,\n        SERVICE_UUID,\n        CHARACTERISTIC_LOCATION,\n        (data) => {\n          setLocation(bytesToString(data));\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n      window.ble.read(\n        device.id,\n        SERVICE_UUID,\n        CHARACTERISTIC_FLOW_RATE,\n        (data) => {\n          setFlowRate(bytesToString(data));\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }, [device]);\n\n  useEffect(() => {\n    if (dateTime) {\n      setInputs((inputs) => ({ ...inputs, dateTime }));\n    }\n    if (location) {\n      setInputs((inputs) => ({ ...inputs, location }));\n    }\n    if (flowRate) {\n      setInputs((inputs) => ({ ...inputs, flowRate }));\n    }\n  }, [dateTime, location, flowRate]);\n\n  return (\n    <div className=\"uk-section uk-section-small\">\n      <div className=\"uk-container\">\n        <form className=\"uk-form-stacked\" onSubmit={handleSubmit}>\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">\n                Datum und Uhrzeit\n              </label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <input\n                  className=\"uk-input\"\n                  type=\"date-time\"\n                  name=\"dateTime\"\n                  disabled=\"true\"\n                  value={inputs.dateTime}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">\n                Standort des Geräts\n              </label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <div className=\"uk-inline uk-width-1-1\">\n                  <button\n                    type=\"button\"\n                    className=\"uk-form-icon uk-form-icon-flip\"\n                    uk-icon=\"icon: location\"\n                    onClick={handleLocation}\n                  ></button>\n                  <input\n                    className=\"uk-input\"\n                    type=\"text\"\n                    name=\"location\"\n                    value={inputs.location}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">\n                Flussrate in Liter/Minute\n              </label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <input\n                  className=\"uk-input\"\n                  type=\"text\"\n                  name=\"flowRate\"\n                  value={inputs.flowRate}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"uk-margin\">\n            <button\n              className=\"uk-button uk-button-primary uk-width-1-1\"\n              type=\"submit\"\n            >\n              Speichern\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SettingsContainer;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction DeviceItem(props) {\n  const { device, onClick } = props;\n\n  return (\n    <div className=\"s-device\" onClick={onClick}>\n      <h2 className=\"s-device__name\">{device.name}</h2>\n      <p className=\"s-device__info\">\n        id: {device.id} RSSI: {device.rssi}\n      </p>\n      <span className=\"s-device__icon\"></span>\n      <span className=\"s-device__arrow\"></span>\n    </div>\n  );\n}\n\nexport default DeviceItem;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction DeviceConnecting() {\n  return (\n    <div className=\"s-loading\">\n      <span className=\"s-loading__circle\"></span>\n      <span className=\"s-loading__icon\"></span>\n      <span className=\"s-loading__text\">Verbinde...</span>\n    </div>\n  );\n}\n\nexport default DeviceConnecting;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction DeviceLoading(props) {\n  return (\n    <div className=\"s-loading\">\n      <span className=\"s-loading__circle\"></span>\n      <span className=\"s-loading__icon\"></span>\n      <span className=\"s-loading__text\">Suche Geräte...</span>\n    </div>\n  );\n}\n\nexport default DeviceLoading;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction DeviceNotFound() {\n  return (\n    <div className=\"s-not-found\">\n      <span className=\"s-not-found__icon\"></span>\n      <span className=\"s-not-found__text\">Keine Geräte gefunden</span>\n    </div>\n  );\n}\n\nexport default DeviceNotFound;\n","import React, { useState } from \"react\";\nimport DeviceItem from \"./components/device-item\";\nimport DeviceConnecting from \"./components/device-connecting\";\nimport DeviceLoading from \"./components/device-loading\";\n\nimport \"./styles.scss\";\nimport DeviceNotFound from \"./components/device-not-found\";\n\nfunction StartContainer(props) {\n  const { isScanning, scan, devices, selectDevice } = props;\n  const [connecting, setConnecting] = useState(false);\n\n  const handleDeviceClick = (device) => {\n    const save = window.confirm(\n      \"Möchtest Du Dich beim nächsten mal direkt mit diesem Gerät verbinden?\"\n    );\n    if (save) {\n      localStorage.setItem(\"deviceId\", JSON.stringify(device));\n    }\n    setConnecting(true);\n    selectDevice(device);\n  };\n\n  return (\n    <div className=\"uk-section uk-section-small\">\n      <div className=\"uk-container\">\n        {connecting && <DeviceConnecting />}\n        {isScanning && <DeviceLoading />}\n        {!isScanning && devices.length === 0 && <DeviceNotFound />}\n        {devices.length > 0 && (\n          <div>\n            {devices.map((device) => (\n              <DeviceItem\n                device={device}\n                key={device.name}\n                onClick={() => {\n                  handleDeviceClick(device);\n                }}\n              />\n            ))}\n          </div>\n        )}\n        {!isScanning && (\n          <button\n            className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\"\n            onClick={() => {\n              scan();\n            }}\n          >\n            <span>\n              <i className=\"fas fa-redo\"></i> Erneut suchen\n            </span>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StartContainer;\n","import React from \"react\";\nimport { getSunrise, getSunset } from \"sunrise-sunset-js\";\n\nfunction ProgramForm(props) {\n  const { title, inputs, location, onInputChange, onSubmit, onCancel, onDelete } = props;\n\n  const durationSelectOptions = [];\n  for (let i = 1; i <= 60; i++) {\n    durationSelectOptions.push(\n      <option value={i} key={i}>\n        {i} {i !== 1 ? \"Minuten\" : \"Minute\"}\n      </option>\n    );\n  }\n\n  const coords = location.split(\";\");\n  const latitude = coords[0];\n  const longitude = coords[1];\n\n  const sunrise = new Date(getSunrise(latitude, longitude));\n  const sunset = new Date(getSunset(latitude, longitude));\n  return (\n    <div className=\"uk-section uk-section-small\">\n      <div className=\"uk-container\">\n        <h3 className=\"uk-heading-line uk-text-center\">{title}</h3>\n        <form onSubmit={onSubmit}>\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label uk-text-bold\">Startzeit</label>\n                <div className=\"uk-form-controls uk-margin-small-top\">\n                  <input\n                    className=\"uk-radio\"\n                    name=\"mode\"\n                    checked={inputs.mode === \"1\"}\n                    value=\"1\"\n                    onChange={onInputChange}\n                    type=\"radio\"\n                  />{\" \"}\n                  Sonnenaufgang ({sunrise.getHours()}:{sunrise.getMinutes()}{\" \"}\n                  Uhr)\n                </div>\n                <div className=\"uk-form-controls uk-margin-small-top\">\n                  <input\n                    className=\"uk-radio\"\n                    name=\"mode\"\n                    checked={inputs.mode === \"2\"}\n                    value=\"2\"\n                    onChange={onInputChange}\n                    type=\"radio\"\n                  />{\" \"}\n                  Sonnenuntergang ({sunset.getHours()}:{sunset.getMinutes()}{\" \"}\n                  Uhr)\n                </div>\n                <div className=\"uk-form-controls uk-margin-small-top\">\n                  <input\n                    className=\"uk-radio\"\n                    name=\"mode\"\n                    checked={inputs.mode === \"0\"}\n                    value=\"0\"\n                    onChange={onInputChange}\n                    type=\"radio\"\n                  />{\" \"}\n                  Manuell\n                  <div className=\"uk-form-controls uk-margin-small-top\">\n                    <input\n                      className=\"uk-input\"\n                      type=\"time\"\n                      name=\"startTime\"\n                      disabled={inputs.mode !== \"0\"}\n                      value={inputs.startTime}\n                      onChange={onInputChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">Dauer</label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <select\n                  className=\"uk-select\"\n                  name=\"duration\"\n                  value={inputs.duration}\n                  onChange={onInputChange}\n                >\n                  {durationSelectOptions}\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">Interval</label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <select\n                  className=\"uk-select\"\n                  name=\"interval\"\n                  disabled={inputs.mode !== \"0\"}\n                  value={inputs.interval}\n                  onChange={onInputChange}\n                >\n                  <option value=\"0\">3 mal täglich</option>\n                  <option value=\"1\">2 mal täglich</option>\n                  <option value=\"2\">1 mal täglich</option>\n                  <option value=\"3\">Alle zwei Tage</option>\n                  <option value=\"4\">Alle drei Tage</option>\n                  <option value=\"5\">Einmal die Woche</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"uk-margin\">\n            <div className=\"uk-card uk-card-default uk-card-small uk-card-body\">\n              <label className=\"uk-form-label uk-text-bold\">\n                Smarte Bewässerung\n              </label>\n              <div className=\"uk-form-controls uk-margin-small-top\">\n                <input\n                  className=\"uk-checkbox\"\n                  name=\"smart\"\n                  checked={inputs.smart}\n                  onChange={onInputChange}\n                  type=\"checkbox\"\n                />{\" \"}\n                Sensoren verwenden\n              </div>\n            </div>\n          </div>\n          <div className=\"uk-margin-small\">\n            <button\n              className=\"uk-button uk-button-primary uk-width-1-1\"\n              type=\"submit\"\n            >\n              Speichern\n            </button>\n          </div>\n          <div className=\"uk-margin-small\">\n            <button\n              className=\"uk-button uk-button-default uk-width-1-1\"\n              type=\"button\"\n              onClick={onCancel}\n            >\n              Zurück\n            </button>\n          </div>\n          <div className=\"uk-margin-small\">\n            <button\n              className=\"uk-button uk-button-default uk-width-1-1\"\n              type=\"button\"\n              onClick={onDelete}\n            >\n              Löschen\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgramForm;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction ProgramItem(props) {\n  const { program, label, onSelectProgramm, onSetProgramActive } = props;\n\n  const getIntervalLabel = (interval) => {\n    const label = [\n      \"3 mal täglich\",\n      \"2 mal täglich\",\n      \"1 mal täglich\",\n      \"Alle zwei Tage\",\n      \"Alle drei Tage\",\n      \"Einmal die Woche\",\n    ];\n    return label[interval];\n  };\n\n  const getModeLabel = (mode, startTime) => {\n    const label = [`${startTime} Uhr`, \"Sonnenaufgang\", \"Sonnenuntergang\"];\n    return label[mode];\n  };\n\n  return (\n    <div className=\"s-program\" onClick={onSelectProgramm}>\n      <h2 className=\"s-program__name\">{label}</h2>\n      <p className=\"s-program__info\">\n        {getModeLabel(program.mode, program.startTime)} - {program.duration}{\" \"}\n        Min. - {getIntervalLabel(program.interval)}\n      </p>\n      <span\n        className={program.active ? \"s-program__active\" : \"s-program__inactive\"}\n        onClick={onSetProgramActive}\n      ></span>\n      <span className=\"s-program__arrow\"></span>\n    </div>\n  );\n}\n\nexport default ProgramItem;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction ProgramNotFound() {\n  return (\n    <div className=\"s-program-not-found\">\n      <span className=\"s-program-not-found__icon\"></span>\n      <span className=\"s-program-not-found__text\">\n        Noch keine Programme gespeichert\n      </span>\n    </div>\n  );\n}\n\nexport default ProgramNotFound;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport ProgramForm from \"./components/program-form\";\nimport ProgramItem from \"./components/program-item\";\nimport ProgramNotFound from \"./components/program-not-found\";\nimport {\n  CHARACTERISTIC_LOCATION,\n  CHARACTERISTIC_PROGRAM,\n  SERVICE_UUID,\n} from \"../../constants\";\nimport { bytesToString, stringToBytes } from \"../../helpers/utils\";\n\nfunction WateringContainer(props) {\n  const { device } = props;\n  const [programs, setPrograms] = useState(\n    JSON.parse(localStorage.getItem(`programs_${device.id}`)) || []\n  );\n  const getActiveProgram = () => {\n    let activeId = 0;\n    programs.forEach((program, index) => {\n      if (program.active === true) {\n        activeId = index + 1;\n      }\n    });\n    return activeId;\n  };\n\n  const [activeProgram, setActiveProgram] = useState(getActiveProgram());\n  const [activeProgramChanged, setActiveProgramChanged] = useState(false);\n  const [selectedProgram, setSelectedProgram] = useState(0);\n  const [location, setLocation] = useState(\"\");\n\n  //const [editProgram, setEditProgram] = useState(false);\n  const [addProgram, setAddProgram] = useState(false);\n\n  const inputDefaults = {\n    mode: \"0\",\n    startTime: \"12:00\",\n    duration: 6,\n    interval: 0,\n    smart: 0,\n  };\n\n  const [inputs, setInputs] = useState(inputDefaults);\n\n  function onSelectProgramm(id) {\n    setAddProgram(false);\n    setSelectedProgram(id);\n    setInputs(programs[id - 1]);\n  }\n\n  function onSetProgramActive(event, id) {\n    event.stopPropagation();\n    setActiveProgram(id);\n    setActiveProgramChanged(true);\n    const currentPrograms = [...programs];\n    currentPrograms.forEach((program) => {\n      program.active = false;\n    });\n    currentPrograms[id - 1].active = true;\n  }\n\n  const addNewProgram = () => {\n    setAddProgram(true);\n    setSelectedProgram(0);\n    setInputs(inputDefaults);\n  };\n\n  const saveActiveProgram = () => {\n    const program = programs[getActiveProgram() - 1];\n    window.ble.write(\n      device.id,\n      SERVICE_UUID,\n      CHARACTERISTIC_PROGRAM,\n      stringToBytes(`${program.startTime.replace(\":\", \"\")};${program.duration * 60};${\n        program.interval\n      };${program.smart ? \"1\" : \"0\"}`),\n      () => {},\n      () => {}\n    );\n    localStorage.setItem(`programs_${device.id}`, JSON.stringify(programs));\n    setActiveProgramChanged(false);\n  };\n\n  const onInputChange = (event) => {\n    const value =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    setInputs((inputs) => ({ ...inputs, [event.target.name]: value }));\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (addProgram) {\n      setPrograms((programs) => [...programs, { ...inputs }]);\n      localStorage.setItem(\n        `programs_${device.id}`,\n        JSON.stringify([...programs, { ...inputs }])\n      );\n    } else {\n      const currentPrograms = [...programs];\n      currentPrograms[selectedProgram - 1] = { ...inputs };\n      setPrograms(currentPrograms);\n      localStorage.setItem(\n        `programs_${device.id}`,\n        JSON.stringify(currentPrograms)\n      );\n\n      if (selectedProgram === activeProgram) {\n        setActiveProgramChanged(true);\n      }\n    }\n\n    setSelectedProgram(0);\n    setAddProgram(false);\n    setInputs(inputDefaults);\n  };\n\n  const onCancel = () => {\n    setSelectedProgram(0);\n    setAddProgram(false);\n    setInputs(inputDefaults);\n  };\n\n  const onDelete = () => {\n    const currentPrograms = [...programs];\n    currentPrograms.splice(selectedProgram - 1, 1);\n    setPrograms(currentPrograms);\n    localStorage.setItem(\n      `programs_${device.id}`,\n      JSON.stringify(currentPrograms)\n    );\n    onCancel();\n  }\n\n  useEffect(() => {\n    window.ble.read(\n      device.id,\n      SERVICE_UUID,\n      CHARACTERISTIC_LOCATION,\n      (data) => {\n        setLocation(bytesToString(data));\n      },\n      () => {}\n    );\n  }, [device]);\n\n  return (\n    <Fragment>\n      {!(addProgram || selectedProgram > 0) && (\n        <div className=\"uk-section uk-section-small\">\n          <div className=\"uk-container\">\n            {programs.length > 0 && activeProgram === 0 && (\n              <div uk-alert=\"true\">Es ist noch kein Programm aktiv.</div>\n            )}\n            {activeProgramChanged && (\n              <div className=\"uk-margin\">\n                <div uk-alert=\"true\">\n                  <p>\n                    Aktives Programm wurde verändert. Die Änderung muss an das\n                    Smartgarden Gerät übermittelt werden.\n                  </p>\n                  <button\n                    className=\"uk-button uk-button-default uk-width-1-1\"\n                    type=\"button\"\n                    onClick={saveActiveProgram}\n                  >\n                    Änderung Speichern\n                  </button>\n                </div>\n              </div>\n            )}\n            {programs.length === 0 && <ProgramNotFound />}\n            {programs.length > 0 &&\n              programs.map((program, i) => (\n                <ProgramItem\n                  key={i + 1}\n                  program={program}\n                  label={`Programm ${i + 1}`}\n                  onSelectProgramm={() => {\n                    onSelectProgramm(i + 1);\n                  }}\n                  active={i + 1 === activeProgram}\n                  onSetProgramActive={(event) => {\n                    onSetProgramActive(event, i + 1);\n                  }}\n                />\n              ))}\n\n            <button\n              className=\"uk-button uk-button-primary uk-width-1-1 uk-padding-remove-horizontal\"\n              type=\"button\"\n              onClick={addNewProgram}\n            >\n              <span uk-icon=\"icon: plus\"></span> Hinzufügen\n            </button>\n          </div>\n        </div>\n      )}\n      {(addProgram || selectedProgram > 0) && (\n        <ProgramForm\n          title={addProgram ? \"Neues Programm\" : \"Programm bearbeiten\"}\n          inputs={inputs}\n          location={location}\n          onInputChange={onInputChange}\n          onCancel={onCancel}\n          onDelete={onDelete}\n          onSubmit={onSubmit}\n        />\n      )}\n    </Fragment>\n  );\n}\n\n/*\n<form uk-grid=\"true\">\n                        <div className=\"uk-width-1-1\">\n                            <label className=\"uk-form-label\">Aktives Programm</label>\n                            <div className=\"uk-form-controls\">\n                                <select value={activeProgram} onChange={handleActiveProgramChange} name=\"activeProgram\" className=\"uk-select\">\n                                    {!activeProgram && programs.length === 0 && <option value=\"0\">Keine Programme</option>}\n                                    {programs.length > 0 && <>\n                                        <option value=\"0\">Bitte wählen</option>\n                                        {programs.map((program, index) => <option key={index + 1} value={index + 1}>Programm {index + 1}</option>)}\n                                    </>}\n                                </select>\n                            </div>\n                            {activeProgramChanged &&\n                                <button className=\"uk-button uk-margin-top uk-button-primary uk-width-1-1\" type=\"button\" onClick={saveActiveProgram}>Änderung Speichern</button>}\n                        </div>\n                    </form>\n                    */\n\nexport default WateringContainer;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, useLocation } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { SERVICE_UUID } from \"./constants\";\nimport HomeContainer from \"./containers/home/index\";\nimport SettingsContainer from \"./containers/settings/index\";\nimport StartContainer from \"./containers/start/index\";\nimport WateringContainer from \"./containers/watering/index\";\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"@fortawesome/fontawesome-free/js/all\";\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n  const sessionDevice = JSON.parse(localStorage.getItem(\"deviceId\"));\n  const SCAN_SECONDS = 10;\n\n  // App state\n  const [isScanning, setIsScanning] = useState(true);\n  const [connected, setConnected] = useState(false);\n  const [selectedDevice, setSelectedDevice] = useState(sessionDevice);\n  const [devices, setDevices] = useState([]);\n\n  const selectDevice = (device) => {\n    setSelectedDevice(device);\n  };\n\n  const scan = () => {\n    setIsScanning(true);\n    setDevices([]);\n    // ble.startScan calls success callback everytime it finds a device that provides the service\n    window.ble.scan(\n      [SERVICE_UUID],\n      SCAN_SECONDS,\n      (device) => {\n        setDevices((devices) => [...devices, device]);\n      },\n      () => {}\n    );\n\n    setTimeout(() => {\n      setIsScanning(false);\n    }, SCAN_SECONDS * 1000);\n  };\n\n  useEffect(() => {\n    UIkit.use(Icons);\n  });\n\n  useEffect(() => {\n    if (location) {\n      let title = \"\";\n      let item = \"\";\n      switch (location.pathname) {\n        case \"/home\":\n          title = \"Dashboard\";\n          item = \"dashboard\";\n          window.smartgarden.showBottomBar(\n            \"title\",\n            () => {},\n            () => {}\n          );\n          break;\n        case \"/watering\":\n          title = \"Bewässerung\";\n          item = \"watering\";\n          break;\n        case \"/settings\":\n          title = \"Einstellungen\";\n          item = \"settings\";\n          break;\n        default:\n          title = \"Geräteauswahl\";\n          item = \"select\";\n          break;\n      }\n      window.smartgarden.changeTitle(\n        title,\n        () => {},\n        () => {}\n      );\n      window.smartgarden.setBottomBarItem(\n        item,\n        () => {},\n        () => {}\n      );\n    }\n  }, [location]);\n\n  // If no device is stored in localStorage but user navigated to a route that needs device information, we redirect to device selection page\n  useEffect(() => {\n    if (!selectedDevice && location.pathname !== \"/\") {\n      history.replace(\"/\");\n    }\n  }, [history, selectedDevice, location]);\n\n  // if there is no selectedDevice yet, we initialize the scan for devices\n  useEffect(() => {\n    scan();\n  }, []);\n\n  // if device was selected from the list, setup the connection to the device\n  useEffect(() => {\n    if (selectedDevice) {\n      setIsScanning(false);\n      // connect to the selected device\n      setTimeout(() => {\n        window.ble.connect(\n          selectedDevice.id,\n          () => {\n            setConnected(true);\n            history.replace(\"/home\");\n          },\n          (blib) => {\n            if (connected) {\n              setConnected(false);\n              //setSelectedDevice(null);\n              history.replace(\"/\");\n              alert(\"Das Gerät hat die Verbindung beendet.\");\n              window.smartgarden.hideBottomBar();\n              window.ble.disconnect(selectedDevice.id);\n              scan();\n            }\n          }\n        );\n      }, 100);\n    }\n  }, [selectedDevice, history, connected]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/watering\">\n        <WateringContainer device={selectedDevice} />\n      </Route>\n      <Route exact path=\"/settings\">\n        <SettingsContainer device={selectedDevice} />\n      </Route>\n      <Route exact path=\"/home\">\n        <HomeContainer device={selectedDevice} connected={connected} />\n      </Route>\n      <Route exact path=\"/\">\n        <StartContainer\n          selectDevice={selectDevice}\n          isScanning={isScanning}\n          scan={scan}\n          devices={devices}\n        />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst browserHistory = createBrowserHistory();\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router history={browserHistory}>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\ndocument.addEventListener(\"deviceready\", startApp, false);\n\nwindow.App = {\n  goTo: function (page) {\n    switch (page) {\n      case \"select\":\n        window.location.href = \"#/\";\n        break;\n      case \"dashboard\":\n        window.location.href = \"#/home\";\n        break;\n      case \"watering\":\n        window.location.href = \"#/watering\";\n        break;\n      case \"settings\":\n        window.location.href = \"#/settings\";\n        break;\n      default:\n        window.location.href = \"#/home\";\n        break;\n    }\n  },\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}