{"version":3,"sources":["Diagram.js","constants.js","Containers/Diagram.js","Dashboard.js","MonthlyGarden.js","Containers/Home.js","Containers/Settings.js","Containers/start/components/device-item/index.js","Containers/start/components/device-loading/index.js","Containers/start/index.js","Containers/Start.js","Containers/Watering.js","App.js","reportWebVitals.js","index.js"],"names":["chart","SERVICE_UUID","CHARACTERISTIC_DATE_TIME","CHARACTERISTIC_LOCATION","CHARACTERISTIC_FLOW_RATE","Diagram","props","temperature","temperatureGround","moisture","chartRef","useRef","modalRef","useState","temps","setTemps","tempsGround","setTempsGround","moist","setMoist","useEffect","Chart","current","getContext","type","data","datasets","label","yAxisID","backgroundColor","borderColor","fill","options","animation","scales","y","display","position","ticks","callback","value","index","values","y1","grid","drawOnChartArea","UIkit","modal","show","labels","slice","Math","max","length","map","i","update","className","style","height","ref","DiagramContainer","watering","Dashboard","setShowDiagram","uk-grid","onClick","uk-toggle","to","MonthlyGarden","tabIndex","uk-slider","src","alt","href","uk-slidenav-previous","uk-slider-item","uk-slidenav-next","getValueFromNotificationData","String","fromCharCode","apply","Uint8Array","HomeContainer","connected","device","showDiagram","setTemperature","setTemperatureGround","setMoisture","setWatering","readData","window","ble","read","id","console","log","interval","setInterval","clearInterval","bytesToString","stringToBytes","array","l","charCodeAt","buffer","SettingsContainer","dateTime","setDateTime","location","setLocation","flowRate","setFlowRate","inputs","setInputs","handleInputChange","event","target","name","error","onSubmit","preventDefault","write","onChange","uk-icon","navigator","geolocation","getCurrentPosition","success","getSunrise","coords","latitude","longitude","DeviceItem","rssi","DeviceLoading","Start","isScanning","scan","devices","selectDevice","selectedDevice","setSelectedDevice","createRef","confirmModal","save","handleDeviceClick","uk-modal","StartContainer","WateringContainer","activeProgram","setActiveProgram","activeProgramChanged","setActiveProgramChanged","selectedProgram","setSelectedProgram","programs","setPrograms","addProgram","setAddProgram","inputDefaults","startTime","duration","smart","uk-alert","program","currentPrograms","checked","App","history","useHistory","useLocation","sessionDevice","JSON","parse","sessionStorage","getItem","setIsScanning","setConnected","redirected","setRedirected","setDevice","saveDevice","setSaveDevice","setDevices","setTimeout","SCAN_SECONDS","use","Icons","title","item","pathname","smartgarden","showBottomBar","changeTitle","setBottomBarItem","setItem","stringify","push","stopScan","connect","exact","path","Watering","Settings","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","document","addEventListener","ReactDOM","render","StrictMode","getElementById","goToSelect","goToHome","goToWatering","goToSettings"],"mappings":"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","file":"static/js/main.7851800e.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/dist/chart';\nimport UIkit from 'uikit';\n\nlet chart;\n\nfunction Diagram(props) {\n    const { temperature, temperatureGround, moisture } = props;\n    const chartRef = useRef(null);\n    const modalRef = useRef(null);\n    const [ temps, setTemps ] = useState([]);\n    const [ tempsGround, setTempsGround ] = useState([]);\n    const [ moist, setMoist ] = useState([]);\n\n    useEffect(() => {\n        const options = {\n            animation: false,\n            scales: {\n                y: {\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    ticks: {\n                        callback: function (value, index, values) {\n                            return `${value} °C`;\n                        }\n                    }\n                },\n                y1: {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    ticks: {\n                        callback: function (value, index, values) {\n                            return `${value} %`;\n                        }\n                    },\n                    // grid line settings\n                    grid: {\n                        drawOnChartArea: false, // only want the grid lines for one axis to show up\n                    }\n                }\n            }\n        };\n\n        chart = new Chart(chartRef.current.getContext('2d'), {\n            type: 'line',\n            data: {\n                datasets: [{\n                    label: 'Temperature 1',\n                    yAxisID: 'y',\n                    backgroundColor: 'rgba(255, 0, 0, 0.3)',\n                    borderColor: 'rgba(255, 0, 0, 0.4)',\n                }, {\n                    label: 'Temperature 2',\n                    yAxisID: 'y',\n                    backgroundColor: 'rgba(0, 255, 0, 0.3)',\n                    borderColor: 'rgba(0, 255, 0, 0.4)',\n                }, {\n                    label: 'Moist',\n                    yAxisID: 'y1',\n                    backgroundColor: 'rgba(0, 0, 255, 0.3)',\n                    borderColor: 'rgba(0, 0, 255, 0.4)',\n                    fill: true\n                }]\n            },\n            options: options\n        });\n        \n        UIkit.modal(modalRef.current).show();\n    }, []);\n\n    useEffect(() => {\n        if(temperature && temperatureGround && moisture) {\n            setTemps([...temps, temperature]);\n            setTempsGround([...tempsGround, temperatureGround]);\n            setMoist([...moist, moisture]);\n            chart.data.labels = temps.slice(Math.max(temps.length - 20, 0)).map((label, i) => i);\n            chart.data.datasets[0].data = temps.slice(Math.max(temps.length - 20, 0));\n            chart.data.datasets[1].data = tempsGround.slice(Math.max(tempsGround.length - 20, 0));\n            chart.data.datasets[2].data = moist.slice(Math.max(moist.length - 20, 0));\n            chart.update();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [temperature]);\n\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Details</span></h2>\n\n                <canvas style={{height: '80vh'}} ref={chartRef}></canvas>\n            </div>\n        </div>\n    );\n}\n\nexport default Diagram;\n","export const SERVICE_UUID = '4fafc201-1fb5-459e-8fcc-c5c9c331914b';\nexport const CHARACTERISTIC_TEMP = 'beb5483e-36e1-4688-b7f5-ea07361b26a8';\nexport const CHARACTERISTIC_TEMP_GROUND = 'a10b02a4-3b1c-45b5-a617-5648120f8e4c';\nexport const CHARACTERISTIC_MOISTURE = '9a0c0611-a48f-4dbc-bde2-31582e606ee5';\nexport const CHARACTERISTIC_VALVE = 'c3134125-b92d-479f-a437-2de8cea412e7';\nexport const CHARACTERISTIC_PROGRAM = '20090a72-b78e-4ba9-9df6-705182718eda';\nexport const CHARACTERISTIC_DATE_TIME = '4de76262-8d84-4ba6-bb3a-2f2716a6c28f';\nexport const CHARACTERISTIC_LOCATION = '6bef33fc-dadc-408e-98e9-d6c8cb35e976';\nexport const CHARACTERISTIC_FLOW_RATE = '40a47f70-752b-4598-91ad-748cdbc7958a';","import React from 'react';\n\nimport Diagram from '../Diagram';\n\nfunction DiagramContainer(props) {\n    const { temperature, temperatureGround, moisture, watering } = props;\n\n    return (\n        <div>\n            <Diagram temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} />\n        </div>\n    );\n}\n\nexport default DiagramContainer;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard(props) {\n    const { temperature, temperatureGround, moisture, watering, setShowDiagram } = props;\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <div className=\"uk-child-width-1-2 uk-grid-small uk-grid-match uk-text-center\" uk-grid=\"true\">\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-temperature-high\"></i></span>\n                            <span className=\"uk-h4\">{temperature} °C</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-temperature-high\"></i></span>\n                            <span className=\"uk-h4\">{temperatureGround} °C</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-water\"></i></span>\n                            <span className=\"uk-h4\">{moisture} %</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"uk-card uk-card-default uk-card-body\">\n                            <span className=\"uk-display-block uk-text-large\"><i className=\"fas fa-power-off\"></i></span>\n                            <span className=\"uk-h4\">{watering}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"uk-container uk-margin-top\">\n                <button className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\" onClick={() => { setShowDiagram(true) }} uk-toggle=\"true\">\n                    <span><i className=\"fas fa-chart-area\"></i> Details</span>\n                </button>\n            </div>\n            <div className=\"uk-container\">\n                <Link className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\" to=\"/watering\"><i\n                    className=\"fas fa-hand-holding-water\"></i> Bewässerung</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nfunction MonthlyGarden() {\n    return (\n        <div className=\"uk-section uk-section-small uk-section-muted\">\n            <div className=\"uk-container\">\n                <h2 className=\"uk-heading-line uk-text-center\"><span>Gartenmonat</span></h2>\n                <div className=\"uk-position-relative uk-visible-toggle uk-dark\" tabIndex=\"-1\" uk-slider=\"center: true\">\n\n                    <ul className=\"uk-slider-items uk-grid\">\n                        <li className=\"uk-width-3-4\">\n                            <div className=\"uk-card uk-card-default\">\n                                <div className=\"uk-card-media-top\">\n                                    <img src=\"images/photo.jpg\" alt=\"\" />\n                                </div>\n                                <div className=\"uk-card-body\">\n                                    <h3 className=\"uk-card-title\">April</h3>\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                    incididunt.</p>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"uk-width-3-4\">\n                            <div className=\"uk-card uk-card-default\">\n                                <div className=\"uk-card-media-top\">\n                                    <img src=\"images/photo.jpg\" alt=\"\" />\n                                </div>\n                                <div className=\"uk-card-body\">\n                                    <h3 className=\"uk-card-title\">Mai</h3>\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n                                    incididunt.</p>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n\n                    <button className=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"#prev\" uk-slidenav-previous=\"true\"\n                        uk-slider-item=\"previous\">&nbsp;</button>\n                    <button className=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"#next\" uk-slidenav-next=\"true\"\n                        uk-slider-item=\"next\">&nbsp;</button>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MonthlyGarden;\n","import React, { useEffect, useState } from 'react';\nimport DiagramContainer from '../Containers/Diagram';\nimport Dashboard from '../Dashboard';\nimport MonthlyGarden from '../MonthlyGarden';\nimport {\n    SERVICE_UUID,\n    CHARACTERISTIC_MOISTURE,\n    CHARACTERISTIC_TEMP,\n    CHARACTERISTIC_TEMP_GROUND,\n    CHARACTERISTIC_VALVE\n} from '../constants';\n\n\nconst getValueFromNotificationData = (data) => {\n    return String.fromCharCode.apply(null, new Uint8Array(data));\n};\n\nfunction HomeContainer(props) {\n    const { connected, device } = props;\n\n    const [showDiagram, setShowDiagram] = useState(false);\n\n    const [temperature, setTemperature] = useState(null);\n    const [temperatureGround, setTemperatureGround] = useState(null);\n    const [moisture, setMoisture] = useState(null);\n    const [watering, setWatering] = useState(null);\n\n    useEffect(() => {\n        if(connected && device !== null) {\n            // for some reason startNotification and stopNotification does not work when called synchronously, therefor i\n            // switched to polling with read instead, since it works as expected\n            const readData = () => {\n                window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP, (data) => {\n                    console.log('setTemperature', getValueFromNotificationData(data));\n                    setTemperature(getValueFromNotificationData(data));\n                }, () => { });\n    \n                window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP_GROUND, (data) => {\n                    console.log('setTemperatureGround', getValueFromNotificationData(data));\n                    setTemperatureGround(getValueFromNotificationData(data));\n                }, () => { });\n    \n                window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_MOISTURE, (data) => {\n                    console.log('setMoisture', getValueFromNotificationData(data));\n                    setMoisture(getValueFromNotificationData(data));\n                }, () => { });\n    \n                window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_VALVE, (data) => {\n                    console.log('setWatering', getValueFromNotificationData(data));\n                    setWatering(getValueFromNotificationData(data));\n                }, () => { });\n            }\n            readData();\n            const interval = setInterval(readData, 3000);\n            \n\n            // clean up on unmount\n            return () => {\n                clearInterval(interval);\n                /*console.log('useEffect home goodbye');\n                window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP, () => {\n                    console.log('stopNotification');\n                }, (error) => {\n                    console.log('stopNotification', error);\n                });\n\n                setTimeout(() => {\n                    window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_TEMP_GROUND, () => {\n                        console.log('stopNotification');\n                    }, (error) => {\n                        console.log('stopNotification', error);\n                    });\n                }, 300);\n\n                setTimeout(() => {\n                    window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_MOISTURE, () => {\n                        console.log('stopNotification');\n                    }, (error) => {\n                        console.log('stopNotification', error);\n                    });\n                }, 600);\n                \n                setTimeout(() => {\n                    window.ble.stopNotification(device.id, SERVICE_UUID, CHARACTERISTIC_VALVE, () => {\n                        console.log('stopNotification');\n                    }, (error) => {\n                        console.log('stopNotification', error);\n                    });\n                }, 900);*/\n            };\n        }\n    }, [connected, device]);\n\n    return (\n        <>\n                { connected && !showDiagram && <>\n                    <Dashboard temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} setShowDiagram={setShowDiagram} />\n                    <MonthlyGarden />\n                </>}\n                { connected && showDiagram && <DiagramContainer temperature={temperature} temperatureGround={temperatureGround} moisture={moisture} watering={watering} /> }\n        </>\n    );\n}\n\nexport default HomeContainer;\n","import React, { useEffect, useState } from 'react';\nimport { CHARACTERISTIC_FLOW_RATE, CHARACTERISTIC_LOCATION, SERVICE_UUID } from '../constants';\nimport { CHARACTERISTIC_DATE_TIME } from '../constants.js';\nimport { getSunrise, getSunset } from 'sunrise-sunset-js';\n\nconst bytesToString = (data) => {\n    return String.fromCharCode.apply(null, new Uint8Array(data));\n};\n\nconst stringToBytes = (data) => {\n    var array = new Uint8Array(data.length);\n    for (var i = 0, l = data.length; i < l; i++) {\n        array[i] = data.charCodeAt(i);\n     }\n     return array.buffer;\n};\n\nfunction SettingsContainer(props) {\n    const { device } = props;\n    const [ dateTime, setDateTime ] = useState(null);\n    const [ location, setLocation ] = useState(null);\n    const [ flowRate, setFlowRate ] = useState(null);\n\n    const [inputs, setInputs] = useState({\n        dateTime: dateTime | '',\n        location: location | '',\n        flowRate: flowRate | ''\n    });\n\n    const handleInputChange = (event) => { setInputs(inputs => ({...inputs, [event.target.name]: event.target.value})); }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        window.ble.write(device.id, SERVICE_UUID, CHARACTERISTIC_DATE_TIME, stringToBytes(inputs.dateTime), (data) => {});\n        window.ble.write(device.id, SERVICE_UUID, CHARACTERISTIC_LOCATION, stringToBytes(inputs.location), (data) => {});\n        window.ble.write(device.id, SERVICE_UUID, CHARACTERISTIC_FLOW_RATE, stringToBytes(inputs.flowRate), (data) => {});\n    };\n\n    const handleLocation = () => {\n        navigator.geolocation.getCurrentPosition((success) => {\n            console.log(getSunrise(success.coords.latitude, success.coords.longitude))\n            setLocation(`${success.coords.latitude};${success.coords.longitude}`);\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    useEffect(() => {\n        if(device) {\n            window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_DATE_TIME, (data) => {\n                console.log('setDateTime', bytesToString(data));\n                setDateTime(bytesToString(data));\n            }, (error) => {\n                console.log(error);\n            });\n    \n            window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_LOCATION, (data) => {\n                console.log('setLocation', bytesToString(data));\n                setLocation(bytesToString(data));\n            }, (error) => {\n                console.log(error);\n            });\n    \n            window.ble.read(device.id, SERVICE_UUID, CHARACTERISTIC_FLOW_RATE, (data) => {\n                console.log('setFlowRate', bytesToString(data));\n                setFlowRate(bytesToString(data));\n            }, (error) => {\n                console.log(error);\n            });\n        }\n    }, [device]);\n\n    useEffect(() => {\n        if (dateTime) {\n            setInputs((inputs) => ({ ...inputs, dateTime }));\n        }\n        if (location) {\n            setInputs((inputs) => ({ ...inputs, location }));\n        }\n        if (flowRate) {\n            setInputs((inputs) => ({ ...inputs, flowRate }));\n        }\n    }, [dateTime, location, flowRate]);\n\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <form className=\"uk-form-stacked\" onSubmit={handleSubmit}>\n                    <div className=\"uk-margin\">\n                        <label className=\"uk-form-label\">Datum und Uhrzeit</label>\n                        <div className=\"uk-form-controls\">\n                            <input className=\"uk-input\" type=\"date-time\" name=\"dateTime\" value={inputs.dateTime} onChange={handleInputChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <label className=\"uk-form-label\">Location</label>\n                        <div className=\"uk-form-controls\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <button type=\"button\" className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: location\" onClick={handleLocation}></button>\n                                <input className=\"uk-input\" type=\"text\" name=\"location\" value={inputs.location} onChange={handleInputChange} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <label className=\"uk-form-label\">Flußrate</label>\n                        <div className=\"uk-form-controls\">\n                            <input className=\"uk-input\" type=\"text\" name=\"flowRate\" value={inputs.flowRate} onChange={handleInputChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"uk-margin\">\n                        <button className=\"uk-button uk-button-primary uk-width-1-1\" type=\"submit\">Speichern</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SettingsContainer;\n","import React from 'react';\nimport './styles.scss';\n\nfunction DeviceItem(props) {\n    const { device, onClick } = props;\n\n    return (\n        <div className=\"s-device\" onClick={onClick}>\n            <h2 className=\"s-device__name\">{ device.name }</h2>\n            <p className=\"s-device__info\">id: { device.id } RSSI: { device.rssi }</p>\n            <span className=\"s-device__icon\"></span>\n            <span className=\"s-device__arrow\"></span>\n        </div>\n    );\n}\n\nexport default DeviceItem;\n","import React from 'react';\nimport './styles.scss';\n\nfunction DeviceLoading(props) {\n    return (\n        <div className=\"s-loading\">\n            <span className=\"s-loading__circle\"></span>\n            <span className=\"s-loading__icon\"></span>\n            <span className=\"s-loading__text\">Suche Geräte...</span>\n        </div>\n    );\n}\n\nexport default DeviceLoading;\n","import React, { createRef, useState } from 'react';\nimport DeviceItem from './components/device-item';\nimport DeviceLoading from './components/device-loading';\n\nimport './styles.scss';\n\nfunction Start(props) {\n    const { isScanning, scan, devices, selectDevice } = props;\n    const [ selectedDevice, setSelectedDevice ] = useState(null);\n    const modal = createRef();\n\n    const handleDeviceClick = (device) => {\n        setSelectedDevice(device);\n    }\n\n    const confirmModal = (save) => {\n        selectDevice(selectedDevice, save);\n    }\n\n    return (\n        <>\n            { isScanning && <DeviceLoading /> }\n            { !isScanning && devices.length === 0 && <div className=\"s-not-found\">\n                <span className=\"s-not-found__icon\"></span>\n                <span className=\"s-not-found__text\">Keine Geräte gefunden</span>\n            </div> }\n            { devices.length > 0 &&  <div>\n                { devices.map(device => <DeviceItem device={device} key={device.name} onClick={() => { handleDeviceClick(device); }}/> ) }\n            </div> }\n            { !isScanning && <button className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\" onClick={() => { scan(); }}>\n                <span><i className=\"fas fa-redo\"></i> Erneut suchen</span>\n            </button> }\n\n            { selectedDevice && <div ref={modal} uk-modal=\"true\" className=\"uk-open\" style={{display: 'block'}}>\n                <div className=\"uk-modal-dialog uk-modal-body\">\n                    <h2 className=\"uk-modal-title\">Gerät</h2>\n                    <p>Möchtest Du Dich beim nächsten mal direkt mit diesem Gerät verbinden?</p>\n                    <p className=\"uk-text-right\">\n                        <button className=\"uk-button uk-button-default\" type=\"button\" onClick={function () { confirmModal(false); }}>Nein</button>\n                        <button className=\"uk-button uk-button-primary\" type=\"button\" onClick={function () { confirmModal(true); }}>Ja</button>\n                    </p>\n                </div>\n            </div>}\n        </>\n    );\n}\n\nexport default Start;\n","import React from 'react';\nimport Start from './start/index'\n\nfunction StartContainer(props) {\n    const { isScanning, scan, devices, selectDevice } = props;\n\n    return (\n        <div className=\"uk-section uk-section-small\">\n            <div className=\"uk-container\">\n                <Start isScanning={isScanning} scan={scan} devices={devices} selectDevice={selectDevice} />\n            </div>\n        </div>\n    );\n}\n\nexport default StartContainer;\n","import React, { Fragment, useState } from 'react';\n\nfunction WateringContainer() {\n    const [activeProgram, setActiveProgram] = useState(0);\n    const [activeProgramChanged, setActiveProgramChanged] = useState(false);\n    const [selectedProgram, setSelectedProgram] = useState(0);\n    const [programs, setPrograms] = useState([]);\n    //const [editProgram, setEditProgram] = useState(false);\n    const [addProgram, setAddProgram] = useState(false);\n\n    const inputDefaults = {\n        startTime: '12:00',\n        duration: 360,\n        interval: 0,\n        smart: false\n    };\n\n    const [inputs, setInputs] = useState(inputDefaults);\n\n    function handleActiveProgramChange(event) {\n        setActiveProgram(event.target.value);\n        setActiveProgramChanged(true);\n    }\n\n    function handleSelectedProgram(event) {\n        setAddProgram(false);\n        setSelectedProgram(event.target.value);\n        setInputs(programs[event.target.value - 1]);\n    }\n\n    const addNewProgram = () => {\n        setAddProgram(true);\n        setSelectedProgram(0);\n        setInputs(inputDefaults);\n    }\n\n    const saveActiveProgram = () => {\n        console.log('should send active program to device', programs[activeProgram - 1]);\n        setActiveProgramChanged(false);\n    }\n\n    const handleInputChange = (event) => { setInputs(inputs => ({...inputs, [event.target.name]: event.target.value})); }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if(addProgram) {\n            setPrograms((programs) => ([...programs, {...inputs}]));\n        } else {\n            const currentPrograms = [...programs];\n            currentPrograms[selectedProgram - 1] = {...inputs};\n            setPrograms(currentPrograms);\n\n            if(selectedProgram === activeProgram) {\n                setActiveProgramChanged(true);\n            }\n        }\n\n        setSelectedProgram(0);\n        setAddProgram(false);\n        setInputs(inputDefaults);\n\n        console.log(inputs);\n    };\n\n    return (\n        <Fragment>\n            <div className=\"uk-section uk-section-small\">\n                <div className=\"uk-container\">\n                    { !activeProgram && <div uk-alert=\"true\">\n                        Es ist noch kein Programm aktiv.\n                    </div>}\n                    <form uk-grid=\"true\">\n                        <div className=\"uk-width-1-1\">\n                            <label className=\"uk-form-label\">Aktives Programm</label>\n                            <div className=\"uk-form-controls\">\n                                <select value={activeProgram} onChange={handleActiveProgramChange} name=\"activeProgram\" className=\"uk-select\">\n                                { !activeProgram && programs.length === 0 && <option value=\"0\">Keine Programme</option>}\n                                { programs.length > 0 && <>\n                                    <option value=\"0\">Bitte wählen</option>\n                                    { programs.map((program, index) => <option key={index+1} value={index+1}>Programm {index+1}</option>) }\n                                </>}\n                                </select>\n                            </div>\n                            { activeProgramChanged &&\n                                <button className=\"uk-button uk-margin-top uk-button-primary uk-width-1-1\" type=\"button\" onClick={saveActiveProgram}>Änderung Speichern</button> }\n                        </div>\n                        <div className=\"uk-width-3-4\">\n                            <label className=\"uk-form-label\">Programm bearbeiten</label>\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <select value={selectedProgram} onChange={handleSelectedProgram} name=\"profile\" className=\"uk-select\">\n                                { programs.length === 0 && <option value=\"0\">Keine Programme</option>}\n                                { programs.length > 0 && <>\n                                    <option value=\"0\">Bitte wählen</option>\n                                    { programs.map((program, index) => <option key={index+1} value={index+1}>Programm {index+1}</option>) }\n                                </>}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-width-1-4\">\n                            <label className=\"uk-form-label\">&nbsp;</label>\n                            <button className=\"uk-button uk-button-primary uk-width-1-1 uk-padding-remove-horizontal\" type=\"button\" onClick={addNewProgram}><span uk-icon=\"icon: plus\"></span></button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            { (addProgram || selectedProgram > 0) && <div className=\"uk-section uk-section-small\">\n                <div className=\"uk-container\">\n                    <h3 className=\"uk-heading-line uk-text-center\">\n                        { addProgram && <span>Neues Programm</span> }\n                        { selectedProgram > 0 && <span>Programm bearbeiten</span> }\n                    </h3>\n                    <form className=\"uk-form-stacked\" onSubmit={handleSubmit}>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Startzeit</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-input\" type=\"time\" name=\"startTime\" value={inputs.startTime} onChange={handleInputChange} />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Dauer</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-input\" type=\"text\" name=\"duration\" value={inputs.duration} onChange={handleInputChange} />\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Interval</label>\n                            <div className=\"uk-form-controls\">\n                                <select className=\"uk-select\" name=\"interval\" value={inputs.interval} onChange={handleInputChange}>\n                                    <option value=\"0\">3 mal täglich</option>\n                                    <option value=\"1\">2 mal täglich</option>\n                                    <option value=\"2\">1 mal täglich</option>\n                                    <option value=\"3\">Alle zwei Tage</option>\n                                    <option value=\"4\">Alle drei Tage</option>\n                                    <option value=\"5\">Einmal die Woche</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <label className=\"uk-form-label\">Smarte Bewässerung</label>\n                            <div className=\"uk-form-controls\">\n                                <input className=\"uk-checkbox\" name=\"smart\" checked={inputs.smart} onChange={handleInputChange} type=\"checkbox\" /> Sensoren verwenden\n                            </div>\n                        </div>\n                        <div className=\"uk-margin\">\n                            <button className=\"uk-button uk-button-primary uk-width-1-1\" type=\"submit\">Speichern</button>\n                        </div>\n                    </form>\n                </div>\n            </div>}\n        </Fragment>\n    );\n}\n\nexport default WateringContainer;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Switch,\n    Route,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport './App.scss';\nimport { SERVICE_UUID } from './constants';\nimport HomeContainer from './Containers/Home';\nimport SettingsContainer from './Containers/Settings';\nimport StartContainer from './Containers/Start';\nimport WateringContainer from './Containers/Watering';\nimport UIkit from 'uikit'\nimport Icons from 'uikit/dist/js/uikit-icons'\n\nfunction App() {\n    const history = useHistory();\n    const location = useLocation();\n    const sessionDevice = JSON.parse(sessionStorage.getItem('deviceId'));\n    const SCAN_SECONDS = 10;\n    // App state\n    const [isScanning, setIsScanning] = useState(true);\n    const [connected, setConnected] = useState(false);\n    const [redirected, setRedirected] = useState(false);\n    const [device, setDevice] = useState(null);\n    const [selectedDevice, setSelectedDevice] = useState(sessionDevice);\n    const [saveDevice, setSaveDevice] = useState(false);\n    const [devices, setDevices] = useState([]);\n\n    const selectDevice = (device, save) => {\n        setSaveDevice(save);\n        setSelectedDevice(device);\n    }\n\n    const scan = () => {\n        setIsScanning(true);\n        // ble.startScan calls success callback everytime it finds a device that provides the service\n        window.ble.scan([SERVICE_UUID], SCAN_SECONDS, (device) => {\n            setDevice(device);\n        }, () => { });\n\n        setTimeout(() => {\n            setIsScanning(false);\n        }, SCAN_SECONDS * 1000);\n    };\n\n    useEffect(() => {\n        UIkit.use(Icons);\n    });\n\n    useEffect(() => {\n        if (location) {\n            let title = \"\";\n            let item = \"\";\n            switch (location.pathname) {\n                case '/home':\n                    title = \"Dashboard\";\n                    item = 'dashboard';\n                    window.smartgarden.showBottomBar('title', () => {}, () => {});\n                    break;\n                case '/watering':\n                    title = \"Bewaesserung\";\n                    item = 'watering';\n                    break;\n                case '/settings':\n                    title = \"Einstellungen\";\n                    item = 'settings';\n                    break;\n                default:\n                    title = \"Geräteauswahl\";\n                    item = 'select';\n                    break;\n            }\n            window.smartgarden.changeTitle(title, () => {}, () => {});\n            window.smartgarden.setBottomBarItem(item, () => {}, () => {});\n        }\n    }, [location])\n\n    // If a device is stored in localStorage, we can directly navigate to home page\n    useEffect(() => {\n        if (connected) {\n            if (saveDevice) {\n                console.log('save');\n                sessionStorage.setItem('deviceId', JSON.stringify(selectedDevice));\n            }\n            if(!redirected && location.pathname === '/') {\n                console.log('redirect');\n                history.push('/home');\n                setRedirected(true);\n            }\n        }\n    }, [connected, redirected, saveDevice, selectedDevice, history, location])\n\n    // If no device is stored in localStorage but user navigated to a route that needs device information, we redirect to device selection page\n    useEffect(() => {\n        if (!selectedDevice && location.pathname !== '/') {\n            history.push('/');\n        }\n    }, [history, selectedDevice, location]);\n\n    // if device was selected, stop scanning\n    useEffect(() => {\n        if (selectedDevice && isScanning) {\n            window.ble.stopScan(() => { }, () => { });\n        }\n    }, [selectedDevice, isScanning]);\n\n    // if device was selected from the list, setup the connection to the device\n    useEffect(() => {\n        if (selectedDevice) {\n            setIsScanning(false);\n            // connect to the selected device\n            window.ble.connect(selectedDevice.id, () => {\n                setConnected(true);\n            });\n        }\n    }, [selectedDevice]);\n\n    // append scanned device to device list\n    useEffect(() => {\n        if (device) {\n            setDevices((devices) => [...devices, device]);\n        }\n    }, [device]);\n\n    // if there is no selectedDevice yet, we initialize the scan for devices\n    useEffect(() => {\n        if (!selectedDevice) {\n            scan();\n        }\n    }, [selectedDevice]);\n\n\n\n    return (\n        <Switch>\n            <Route exact path=\"/watering\">\n                <WateringContainer />\n            </Route>\n            <Route exact path=\"/settings\">\n                <SettingsContainer device={selectedDevice} />\n            </Route>\n            <Route exact path=\"/home\">\n                <HomeContainer connected={connected} device={selectedDevice} />\n            </Route>\n            <Route exact path=\"/\">\n                <StartContainer isScanning={isScanning} scan={scan} devices={devices} selectDevice={selectDevice} />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst browserHistory = createBrowserHistory();\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router history={browserHistory}>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\ndocument.addEventListener('deviceready', startApp, false)\ndocument.addEventListener('backbutton', () => {\n  console.log('backbutton');\n  window.location.href = '#/home';\n}, false);\n\nwindow.App = {\n  goToSelect: function() {\n    window.location.href = '#/';\n  },\n  goToHome: function() {\n    window.location.href = '#/home';\n  },\n  goToWatering: function() {\n    window.location.href = '#/watering';\n  },\n  goToSettings: function() {\n    window.location.href = '#/settings';\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}